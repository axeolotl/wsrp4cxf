
package oasis.names.tc.wsrp.v1.intf;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import oasis.names.tc.wsrp.v1.wsdl.WSRPService;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebParam.Mode;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.jws.soap.SOAPBinding.ParameterStyle;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.1.1
 * Wed Aug 13 15:22:22 CEST 2008
 * Generated source version: 2.1.1
 * 
 */

public final class WSRPV1PortletManagementPortType_WSRPPortletManagementService_Client {

    private static final QName SERVICE_NAME = new QName("urn:oasis:names:tc:wsrp:v1:wsdl", "WSRPService");

    private WSRPV1PortletManagementPortType_WSRPPortletManagementService_Client() {
    }

    public static void main(String args[]) throws Exception {
        URL wsdlURL = WSRPService.WSDL_LOCATION;
        if (args.length > 0) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        WSRPService ss = new WSRPService(wsdlURL, SERVICE_NAME);
        WSRPV1PortletManagementPortType port = ss.getWSRPPortletManagementService();  
        
        {
        System.out.println("Invoking destroyPortlets...");
        oasis.names.tc.wsrp.v1.types.DestroyPortlets _destroyPortlets_destroyPortlets = null;
        try {
            oasis.names.tc.wsrp.v1.types.DestroyPortletsResponse _destroyPortlets__return = port.destroyPortlets(_destroyPortlets_destroyPortlets);
            System.out.println("destroyPortlets.result=" + _destroyPortlets__return);

        } catch (InvalidRegistration e) { 
            System.out.println("Expected exception: InvalidRegistration has occurred.");
            System.out.println(e.toString());
        } catch (MissingParameters e) { 
            System.out.println("Expected exception: MissingParameters has occurred.");
            System.out.println(e.toString());
        } catch (InconsistentParameters e) { 
            System.out.println("Expected exception: InconsistentParameters has occurred.");
            System.out.println(e.toString());
        } catch (OperationFailed e) { 
            System.out.println("Expected exception: OperationFailed has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking setPortletProperties...");
        oasis.names.tc.wsrp.v1.types.SetPortletProperties _setPortletProperties_setPortletProperties = null;
        try {
            oasis.names.tc.wsrp.v1.types.PortletContext _setPortletProperties__return = port.setPortletProperties(_setPortletProperties_setPortletProperties);
            System.out.println("setPortletProperties.result=" + _setPortletProperties__return);

        } catch (InvalidRegistration e) { 
            System.out.println("Expected exception: InvalidRegistration has occurred.");
            System.out.println(e.toString());
        } catch (MissingParameters e) { 
            System.out.println("Expected exception: MissingParameters has occurred.");
            System.out.println(e.toString());
        } catch (InvalidUserCategory e) { 
            System.out.println("Expected exception: InvalidUserCategory has occurred.");
            System.out.println(e.toString());
        } catch (AccessDenied e) { 
            System.out.println("Expected exception: AccessDenied has occurred.");
            System.out.println(e.toString());
        } catch (InvalidHandle e) { 
            System.out.println("Expected exception: InvalidHandle has occurred.");
            System.out.println(e.toString());
        } catch (InconsistentParameters e) { 
            System.out.println("Expected exception: InconsistentParameters has occurred.");
            System.out.println(e.toString());
        } catch (OperationFailed e) { 
            System.out.println("Expected exception: OperationFailed has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking clonePortlet...");
        oasis.names.tc.wsrp.v1.types.ClonePortlet _clonePortlet_clonePortlet = null;
        try {
            oasis.names.tc.wsrp.v1.types.PortletContext _clonePortlet__return = port.clonePortlet(_clonePortlet_clonePortlet);
            System.out.println("clonePortlet.result=" + _clonePortlet__return);

        } catch (InvalidRegistration e) { 
            System.out.println("Expected exception: InvalidRegistration has occurred.");
            System.out.println(e.toString());
        } catch (MissingParameters e) { 
            System.out.println("Expected exception: MissingParameters has occurred.");
            System.out.println(e.toString());
        } catch (InvalidUserCategory e) { 
            System.out.println("Expected exception: InvalidUserCategory has occurred.");
            System.out.println(e.toString());
        } catch (AccessDenied e) { 
            System.out.println("Expected exception: AccessDenied has occurred.");
            System.out.println(e.toString());
        } catch (InvalidHandle e) { 
            System.out.println("Expected exception: InvalidHandle has occurred.");
            System.out.println(e.toString());
        } catch (InconsistentParameters e) { 
            System.out.println("Expected exception: InconsistentParameters has occurred.");
            System.out.println(e.toString());
        } catch (OperationFailed e) { 
            System.out.println("Expected exception: OperationFailed has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking getPortletDescription...");
        oasis.names.tc.wsrp.v1.types.GetPortletDescription _getPortletDescription_getPortletDescription = null;
        try {
            oasis.names.tc.wsrp.v1.types.PortletDescriptionResponse _getPortletDescription__return = port.getPortletDescription(_getPortletDescription_getPortletDescription);
            System.out.println("getPortletDescription.result=" + _getPortletDescription__return);

        } catch (InvalidRegistration e) { 
            System.out.println("Expected exception: InvalidRegistration has occurred.");
            System.out.println(e.toString());
        } catch (MissingParameters e) { 
            System.out.println("Expected exception: MissingParameters has occurred.");
            System.out.println(e.toString());
        } catch (InvalidUserCategory e) { 
            System.out.println("Expected exception: InvalidUserCategory has occurred.");
            System.out.println(e.toString());
        } catch (AccessDenied e) { 
            System.out.println("Expected exception: AccessDenied has occurred.");
            System.out.println(e.toString());
        } catch (InvalidHandle e) { 
            System.out.println("Expected exception: InvalidHandle has occurred.");
            System.out.println(e.toString());
        } catch (InconsistentParameters e) { 
            System.out.println("Expected exception: InconsistentParameters has occurred.");
            System.out.println(e.toString());
        } catch (OperationFailed e) { 
            System.out.println("Expected exception: OperationFailed has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking getPortletPropertyDescription...");
        oasis.names.tc.wsrp.v1.types.GetPortletPropertyDescription _getPortletPropertyDescription_getPortletPropertyDescription = null;
        try {
            oasis.names.tc.wsrp.v1.types.PortletPropertyDescriptionResponse _getPortletPropertyDescription__return = port.getPortletPropertyDescription(_getPortletPropertyDescription_getPortletPropertyDescription);
            System.out.println("getPortletPropertyDescription.result=" + _getPortletPropertyDescription__return);

        } catch (InvalidRegistration e) { 
            System.out.println("Expected exception: InvalidRegistration has occurred.");
            System.out.println(e.toString());
        } catch (MissingParameters e) { 
            System.out.println("Expected exception: MissingParameters has occurred.");
            System.out.println(e.toString());
        } catch (InvalidUserCategory e) { 
            System.out.println("Expected exception: InvalidUserCategory has occurred.");
            System.out.println(e.toString());
        } catch (AccessDenied e) { 
            System.out.println("Expected exception: AccessDenied has occurred.");
            System.out.println(e.toString());
        } catch (InvalidHandle e) { 
            System.out.println("Expected exception: InvalidHandle has occurred.");
            System.out.println(e.toString());
        } catch (InconsistentParameters e) { 
            System.out.println("Expected exception: InconsistentParameters has occurred.");
            System.out.println(e.toString());
        } catch (OperationFailed e) { 
            System.out.println("Expected exception: OperationFailed has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking getPortletProperties...");
        oasis.names.tc.wsrp.v1.types.GetPortletProperties _getPortletProperties_getPortletProperties = null;
        try {
            oasis.names.tc.wsrp.v1.types.PropertyList _getPortletProperties__return = port.getPortletProperties(_getPortletProperties_getPortletProperties);
            System.out.println("getPortletProperties.result=" + _getPortletProperties__return);

        } catch (InvalidRegistration e) { 
            System.out.println("Expected exception: InvalidRegistration has occurred.");
            System.out.println(e.toString());
        } catch (MissingParameters e) { 
            System.out.println("Expected exception: MissingParameters has occurred.");
            System.out.println(e.toString());
        } catch (InvalidUserCategory e) { 
            System.out.println("Expected exception: InvalidUserCategory has occurred.");
            System.out.println(e.toString());
        } catch (AccessDenied e) { 
            System.out.println("Expected exception: AccessDenied has occurred.");
            System.out.println(e.toString());
        } catch (InvalidHandle e) { 
            System.out.println("Expected exception: InvalidHandle has occurred.");
            System.out.println(e.toString());
        } catch (InconsistentParameters e) { 
            System.out.println("Expected exception: InconsistentParameters has occurred.");
            System.out.println(e.toString());
        } catch (OperationFailed e) { 
            System.out.println("Expected exception: OperationFailed has occurred.");
            System.out.println(e.toString());
        }
            }

        System.exit(0);
    }

}
