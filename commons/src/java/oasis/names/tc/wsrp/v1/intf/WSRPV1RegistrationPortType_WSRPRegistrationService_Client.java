
package oasis.names.tc.wsrp.v1.intf;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import oasis.names.tc.wsrp.v1.wsdl.WSRPService;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebParam.Mode;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.jws.soap.SOAPBinding.ParameterStyle;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.1.1
 * Wed Aug 13 15:22:22 CEST 2008
 * Generated source version: 2.1.1
 * 
 */

public final class WSRPV1RegistrationPortType_WSRPRegistrationService_Client {

    private static final QName SERVICE_NAME = new QName("urn:oasis:names:tc:wsrp:v1:wsdl", "WSRPService");

    private WSRPV1RegistrationPortType_WSRPRegistrationService_Client() {
    }

    public static void main(String args[]) throws Exception {
        URL wsdlURL = WSRPService.WSDL_LOCATION;
        if (args.length > 0) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        WSRPService ss = new WSRPService(wsdlURL, SERVICE_NAME);
        WSRPV1RegistrationPortType port = ss.getWSRPRegistrationService();  
        
        {
        System.out.println("Invoking modifyRegistration...");
        oasis.names.tc.wsrp.v1.types.ModifyRegistration _modifyRegistration_modifyRegistration = null;
        try {
            oasis.names.tc.wsrp.v1.types.RegistrationState _modifyRegistration__return = port.modifyRegistration(_modifyRegistration_modifyRegistration);
            System.out.println("modifyRegistration.result=" + _modifyRegistration__return);

        } catch (InvalidRegistration e) { 
            System.out.println("Expected exception: InvalidRegistration has occurred.");
            System.out.println(e.toString());
        } catch (MissingParameters e) { 
            System.out.println("Expected exception: MissingParameters has occurred.");
            System.out.println(e.toString());
        } catch (OperationFailed e) { 
            System.out.println("Expected exception: OperationFailed has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking deregister...");
        oasis.names.tc.wsrp.v1.types.RegistrationContext _deregister_deregister = null;
        try {
            oasis.names.tc.wsrp.v1.types.ReturnAny _deregister__return = port.deregister(_deregister_deregister);
            System.out.println("deregister.result=" + _deregister__return);

        } catch (InvalidRegistration e) { 
            System.out.println("Expected exception: InvalidRegistration has occurred.");
            System.out.println(e.toString());
        } catch (OperationFailed e) { 
            System.out.println("Expected exception: OperationFailed has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking register...");
        oasis.names.tc.wsrp.v1.types.RegistrationData _register_register = null;
        try {
            oasis.names.tc.wsrp.v1.types.RegistrationContext _register__return = port.register(_register_register);
            System.out.println("register.result=" + _register__return);

        } catch (MissingParameters e) { 
            System.out.println("Expected exception: MissingParameters has occurred.");
            System.out.println(e.toString());
        } catch (OperationFailed e) { 
            System.out.println("Expected exception: OperationFailed has occurred.");
            System.out.println(e.toString());
        }
            }

        System.exit(0);
    }

}
