
/*
 * 
 */

package oasis.names.tc.wsrp.v1.wsdl;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import oasis.names.tc.wsrp.v1.intf.WSRPV1MarkupPortType;
import oasis.names.tc.wsrp.v1.intf.WSRPV1PortletManagementPortType;
import oasis.names.tc.wsrp.v1.intf.WSRPV1RegistrationPortType;
import oasis.names.tc.wsrp.v1.intf.WSRPV1ServiceDescriptionPortType;

/**
 * This class was generated by Apache CXF 2.1.1
 * Wed Aug 13 15:22:22 CEST 2008
 * Generated source version: 2.1.1
 * 
 */
 
/*
 * 
 */

@WebServiceClient(name = "WSRPService", 
                  wsdlLocation = "file:wsrp_service.wsdl",
                  targetNamespace = "urn:oasis:names:tc:wsrp:v1:wsdl") 
public class WSRPService extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("urn:oasis:names:tc:wsrp:v1:wsdl", "WSRPService");
    public final static QName WSRPPortletManagementService = new QName("urn:oasis:names:tc:wsrp:v1:wsdl", "WSRPPortletManagementService");
    public final static QName WSRPRegistrationService = new QName("urn:oasis:names:tc:wsrp:v1:wsdl", "WSRPRegistrationService");
    public final static QName WSRPBaseService = new QName("urn:oasis:names:tc:wsrp:v1:wsdl", "WSRPBaseService");
    public final static QName WSRPServiceDescriptionService = new QName("urn:oasis:names:tc:wsrp:v1:wsdl", "WSRPServiceDescriptionService");
    static {
        URL url = null;
        try {
            url = new URL("file:wsrp_service.wsdl");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from file:wsrp_service.wsdl");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public WSRPService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public WSRPService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public WSRPService() {
        super(WSDL_LOCATION, SERVICE);
    }

    /**
     * 
     * @return
     *     returns WSRPV1PortletManagementPortType
     */
    @WebEndpoint(name = "WSRPPortletManagementService")
    public WSRPV1PortletManagementPortType getWSRPPortletManagementService() {
        return super.getPort(WSRPPortletManagementService, WSRPV1PortletManagementPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns WSRPV1PortletManagementPortType
     */
    @WebEndpoint(name = "WSRPPortletManagementService")
    public WSRPV1PortletManagementPortType getWSRPPortletManagementService(WebServiceFeature... features) {
        return super.getPort(WSRPPortletManagementService, WSRPV1PortletManagementPortType.class, features);
    }
    /**
     * 
     * @return
     *     returns WSRPV1RegistrationPortType
     */
    @WebEndpoint(name = "WSRPRegistrationService")
    public WSRPV1RegistrationPortType getWSRPRegistrationService() {
        return super.getPort(WSRPRegistrationService, WSRPV1RegistrationPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns WSRPV1RegistrationPortType
     */
    @WebEndpoint(name = "WSRPRegistrationService")
    public WSRPV1RegistrationPortType getWSRPRegistrationService(WebServiceFeature... features) {
        return super.getPort(WSRPRegistrationService, WSRPV1RegistrationPortType.class, features);
    }
    /**
     * 
     * @return
     *     returns WSRPV1MarkupPortType
     */
    @WebEndpoint(name = "WSRPBaseService")
    public WSRPV1MarkupPortType getWSRPBaseService() {
        return super.getPort(WSRPBaseService, WSRPV1MarkupPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns WSRPV1MarkupPortType
     */
    @WebEndpoint(name = "WSRPBaseService")
    public WSRPV1MarkupPortType getWSRPBaseService(WebServiceFeature... features) {
        return super.getPort(WSRPBaseService, WSRPV1MarkupPortType.class, features);
    }
    /**
     * 
     * @return
     *     returns WSRPV1ServiceDescriptionPortType
     */
    @WebEndpoint(name = "WSRPServiceDescriptionService")
    public WSRPV1ServiceDescriptionPortType getWSRPServiceDescriptionService() {
        return super.getPort(WSRPServiceDescriptionService, WSRPV1ServiceDescriptionPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns WSRPV1ServiceDescriptionPortType
     */
    @WebEndpoint(name = "WSRPServiceDescriptionService")
    public WSRPV1ServiceDescriptionPortType getWSRPServiceDescriptionService(WebServiceFeature... features) {
        return super.getPort(WSRPServiceDescriptionService, WSRPV1ServiceDescriptionPortType.class, features);
    }

}
